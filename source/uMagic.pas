
unit uMagic;

interface

uses uSquare;

{.$warnings off}
{$include platform.inc}

const
{$ifndef cpu64}
  BMult: array [TSquare] of uint64 = (
    uint64($3821461001091881), uint64($80c0800a0c2a0808), uint64($20400402804104b1), uint64($4800008108249202),
    uint64($0021804042040c22), uint64($404002004402480a), uint64($682010008208a084), uint64($010120002042a088),
    uint64($1000829000001004), uint64($0500404000002004), uint64($00860800000c0414), uint64($003000029800080a),
    uint64($b000060002800482), uint64($1808a8000002c901), uint64($0802408402022092), uint64($180115200000005d),
    uint64($3034008420080015), uint64($71010a00200a00d2), uint64($0102881048101401), uint64($240108c0900a4004),
    uint64($024104200c422029), uint64($0081b42020010002), uint64($0082880080428054), uint64($00c90a0408009002),
    uint64($e0838202000c2140), uint64($208400a101021040), uint64($0104108442005004), uint64($2210100200240100),
    uint64($0403200161004010), uint64($0440410002012300), uint64($02a20110040b8418), uint64($0021089041121041),
    uint64($00a1740000100c64), uint64($4105440000050120), uint64($90028e0100dc1090), uint64($3904405020800822),
    uint64($000201200001002c), uint64($2080320252102082), uint64($0201408a0414010a), uint64($5ca0632030210401),
    uint64($0498080080240420), uint64($1805826040010823), uint64($9102020900010038), uint64($2020010140404061),
    uint64($032204010488c10d), uint64($8020ca11000a8808), uint64($2040061612080811), uint64($0200002050040182),
    uint64($13092040200c01c4), uint64($1058001000412201), uint64($0442000000084021), uint64($840910000300404d),
    uint64($2202108a00a140b0), uint64($012b00440c012820), uint64($0c01000408504202), uint64($0210208808e00411),
    uint64($8082100001110405), uint64($0504228001008822), uint64($0211040a00000202), uint64($8141108e0200c00e),
    uint64($4510c40820080052), uint64($0c08008020140440), uint64($0c88105000026832), uint64($01310121002220c1)
  );

  RMult: array [TSquare] of uint64 = (
    uint64($0402120420080020), uint64($8010200800400050), uint64($1060001000400810), uint64($1000200805020108),
    uint64($8002580116808004), uint64($0580481094100804), uint64($a403890842001452), uint64($8010408000800421),
    uint64($c800a04000008080), uint64($10002000423040c0), uint64($102c803003002004), uint64($0042201018020808),
    uint64($0200401400a04004), uint64($0c00200c08882012), uint64($0104020000010501), uint64($0010438040008001),
    uint64($0820021001105040), uint64($4401086000828404), uint64($2024005000401820), uint64($0022480102084204),
    uint64($0c005a0001004041), uint64($0002548109404041), uint64($00018c0840000202), uint64($0c02610810609401),
    uint64($004b9004000020c1), uint64($0089502240020182), uint64($0020001004810853), uint64($0088110400033001),
    uint64($0120080000240411), uint64($000844125002000e), uint64($0081180200201014), uint64($8220810004080063),
    uint64($088000200000a140), uint64($0840004000808422), uint64($3a0200401400b020), uint64($0040080040005004),
    uint64($1002102100184881), uint64($82800a0408008004), uint64($08804201008a2801), uint64($8080808050424109),
    uint64($0078400080040028), uint64($00a0200001484210), uint64($4404080412010022), uint64($1301002000000810),
    uint64($0452000412200832), uint64($4403000402840059), uint64($0295010002200122), uint64($0000808009002041),
    uint64($8020404002088440), uint64($4410020810211802), uint64($ac8a120028224476), uint64($24488a0002202812),
    uint64($0040040880669008), uint64($0004008050848882), uint64($0011450000250002), uint64($8200808000000041),
    uint64($80a049061c003082), uint64($0081a05140010040), uint64($009500092000c020), uint64($4204600900170430),
    uint64($0008100200a20422), uint64($a1040009101c0201), uint64($00010005800004a2), uint64($0400408101400027)
  );

  BShift: array [TSquare] of byte = (
    26, 27, 27, 27, 27, 27, 27, 26,
    27, 27, 27, 27, 27, 27, 27, 27,
    27, 27, 25, 25, 25, 25, 27, 27,
    27, 27, 25, 23, 23, 25, 27, 27,
    27, 27, 25, 23, 23, 25, 27, 27,
    27, 27, 25, 25, 25, 25, 27, 27,
    27, 27, 27, 27, 27, 27, 27, 27,
    26, 27, 27, 27, 27, 27, 27, 26
  );

  RShift: array [TSquare] of byte = (
    20, 21, 21, 21, 21, 21, 21, 20,
    21, 22, 22, 22, 22, 22, 22, 21,
    21, 22, 22, 22, 22, 22, 22, 21,
    21, 22, 22, 22, 22, 22, 22, 21,
    21, 22, 22, 22, 22, 22, 22, 21,
    21, 22, 22, 22, 22, 22, 22, 21,
    21, 22, 22, 22, 22, 22, 22, 21,
    20, 21, 21, 21, 21, 21, 21, 20
  );

  bsf_index: array [0..63] of integer = (
    63, 30,  3, 32, 25, 41, 22, 33,
    15, 50, 42, 13, 11, 53, 19, 34,
    61, 29,  2, 51, 21, 43, 45, 10,
    18, 47,  1, 54,  9, 57,  0, 35,
    62, 31, 40,  4, 49,  5, 52, 26,
    60,  6, 23, 44, 46, 27, 56, 16,
     7, 39, 48, 24, 59, 14, 12, 55,
    38, 28, 58, 20, 37, 17, 36,  8
  );

{$else}
  BMult: array [TSquare] of uint64 = (
    uint64($0012101041084080), uint64($07080109440900a8), uint64($0069040404850021), uint64($0208084105010400),
    uint64($0084042000020400), uint64($0004822020001000), uint64($0002440220100141), uint64($4c20240402080600),
    uint64($0013400942040042), uint64($50002008014103a0), uint64($1000080604002890), uint64($0400440c01890000),
    uint64($6120040b08000024), uint64($040002032c211084), uint64($10800a0801051030), uint64($45000040c2582002),
    uint64($20050c0808108400), uint64($b018204a02880200), uint64($0008000408001010), uint64($1042000412120006),
    uint64($0004010080a00000), uint64($0000400208200c00), uint64($0024040042082440), uint64($000044090d019014),
    uint64($0008481020200100), uint64($0008600008010311), uint64($0848040018004010), uint64($805c004004010092),
    uint64($0001010100104001), uint64($0082008288080108), uint64($0441020342480400), uint64($04120080020090a0),
    uint64($00081208c8400840), uint64($0000921100085000), uint64($0a0042d001080264), uint64($0060240100100900),
    uint64($0144200200502080), uint64($0310151041220040), uint64($0050408200848200), uint64($00029c0080810c96),
    uint64($440c040440801420), uint64($8081208210002000), uint64($200108440200900c), uint64($0000204010401205),
    uint64($008a240104000210), uint64($0040081804402360), uint64($0008027086041c02), uint64($204241810a008304),
    uint64($0224022104601080), uint64($40010094b0080000), uint64($040c820042080000), uint64($070000008c140201),
    uint64($100080a0060c8081), uint64($2003405002008508), uint64($0020083030809000), uint64($0811102300428010),
    uint64($8010114804042028), uint64($2004194200842001), uint64($2210018310411040), uint64($7280100001148804),
    uint64($0202008020204108), uint64($0040000803080200), uint64($2090101401043401), uint64($0022083004028022)
  );

  RMult: array [TSquare] of uint64 = (
    uint64($8080006088144000), uint64($004002401000e000), uint64($4080100380a00008), uint64($0500090010002204),
    uint64($0a00203002001438), uint64($0200100308020004), uint64($02000804b1060004), uint64($0100015080220100),
    uint64($1000800440008020), uint64($1000404000201000), uint64($0001004020010410), uint64($1002000912012043),
    uint64($8003000410180100), uint64($1800803400800600), uint64($0019009c01002200), uint64($09020000c2810204),
    uint64($4080888000284008), uint64($041000c00020044d), uint64($0109010030412002), uint64($8010828010010800),
    uint64($8210050011000800), uint64($2004008004804200), uint64($9804808006000100), uint64($2000020001810044),
    uint64($80c0104080092080), uint64($8000250100400080), uint64($0ca0008080100020), uint64($00a6044200102008),
    uint64($0000440180180081), uint64($080a001600100408), uint64($020041040018100a), uint64($0008800080004900),
    uint64($000040009280002c), uint64($0050802000804000), uint64($40e0020050100400), uint64($8080500822004200),
    uint64($0000080080802400), uint64($808a000542001810), uint64($280a834804000610), uint64($0418800a40800100),
    uint64($0c41400060808008), uint64($0020004006808020), uint64($0601c02009010010), uint64($a025241001010008),
    uint64($0001000408010010), uint64($0009000824010022), uint64($0802002809820004), uint64($0080c40880420001),
    uint64($012180022904c100), uint64($096100c032088200), uint64($0000402001001100), uint64($1800100408028080),
    uint64($1008010010880500), uint64($0000040080220080), uint64($000a018610084400), uint64($0840842480c10200),
    uint64($08008004210090c1), uint64($4201008042002112), uint64($080020001208c101), uint64($0a20100008200501),
    uint64($8006004804112022), uint64($104d00028400080d), uint64($0004031028020084), uint64($2a19000040220089)
  );

  BShift: array [TSquare] of byte = (
    58, 59, 59, 59, 59, 59, 59, 58,
    59, 59, 59, 59, 59, 59, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 59, 59, 59, 59, 59, 59,
    58, 59, 59, 59, 59, 59, 59, 58
  );

  RShift: array [TSquare] of byte = (
    52, 53, 53, 53, 53, 53, 53, 52,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    52, 53, 53, 53, 53, 53, 53, 52
  );

  bsf_index: array [0..63] of integer = (
     0,  1,  2,  7,  3, 15,  8, 34,
     4, 22, 25, 16, 30,  9, 51, 35,
     5, 13, 23, 28, 26, 43, 17, 45,
    31, 19, 10, 56, 47, 52, 59, 36,
    63,  6, 14, 33, 21, 24, 29, 50,
    12, 27, 42, 44, 18, 55, 46, 58,
    62, 32, 20, 49, 11, 41, 54, 57,
    61, 48, 40, 53, 60, 39, 38, 37
  );

{$endif}

implementation

end.
